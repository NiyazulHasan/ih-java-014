ResultSet object
=================
ResultSet is an interface which is present in java.sql package.

Every ResultSet object contains two position.

1)BFR (Before First Record/Row)

2)ALR (After Last Record/Row)

But by default every record pointer points to BFR position. 


rs.next()
-----------
It is used to move from current position to next position.

If next position is a record then it will return true.

If next position is ALR then it will return false.

Every record ResultSet having one as base index and one column of a record ResultSet having 1 as base index.

Diagram: jdbc2.1


Types of queries in JDBC
=============================
According to the jdbc point of view , we have two types of queries.

1)Select query

2)Non-select query 

1)Select query
--------------
A select query will give bunch of records from database table.
ex:
	select  *  from student;

JDBC Statement object gave executeQuery() method to execute select query.
ex:
	ResultSet rs=st.executeQuery("select * from student");

2)Non-select query 
------------------
A non-select query will give you numeric value represting number of records effected in a database table.
ex:
	delete from student;

JDBC Statement object gave executeUpdate() method to execute non-select query.
ex:
	int result=st.executeUpdate("delete from student");


Type4 JDBC Driver database properties
=======================================
		pkg name
	 ------------------		
driver : oracle.jdbc.driver.OracleDriver 
			    -------------
				driver classname
			protocol
	---------------------------------- 
url : 	jdbc:oracle:thin:@localhost:1521:XE 
	-----------------  |         |    |
	sub protocol    hostname  portno logical database name
 
username : system 

password : admin 


Eclipse
===============
IDE		:	Eclipse JEE IDE 

Environment	:	Java Environment 

Flavour		:	Kepler, Indigo, Luna, Mars and etc.

Vendor		:	Eclipse Fundation

website		:	www.eclipse.org

Download 	:	https://www.eclipse.org/downloads/

Google Drive Link:

https://drive.google.com/file/d/1PZYYpd8RKpLWXe1TfHWaOQfNjOq1OIzy/view?usp=share_link 


Note:
-----
Extract the zip file.
ex:
	right click to eclipse --> extract files --> E drive --> ok 


student table
================
drop table student;

create table student(sno number(3), sname varchar2(10), sadd varchar2(12));

insert into student values(101,'raja','hyd');

insert into student values(102,'ravi','delhi');

insert into student values(103,'ramana','vizag');

commit;

select * from student;


Steps to develop JDBC Application
==================================
There are six steps to develop JDBC application.

1) Register JDBC driver with DriverManager.

2) Establish the Connection with Database software.

3) Create Statement object.

4) Sends and Executes SQL query in database software.

5) Gather the result from database software to process the result.

6) Close all jdbc Connection objects.


Write a jdbc application to select records from student table using Eclipse IDE
===============================================================================

step1:
------
	Make sure Eclipse IDE is installed in our computer.

step2:
-----
	Launch eclipse IDE by choosing workspace location.

step3:
------
	Create a "IH-JAVA-015" project inside eclipse IDE.	 
	ex:
	File --> new --> Project --> Java project --> next --> 
	Project Name : IH-JAVA-015  --> next --> libraries --> add external jars
	--> select "ojdbc14.jar" file --> open -->Finish.
	

step4:
------
	create "com.ihub.www" package inside "src" folder.
	ex:
	Rightclick to src folder --> new --> package --->
	package name : com.ihub.www  --> finish.


step5:
------
	create "SelectApp.java" file inside "com.ihub.www" package.
	ex:
	Right click to com.ihub.www package --> new --> class -->
	class name : SelectApp --> Finish.


SelectApp.java
--------------

package com.ihub.www;

// ctrl + shift + o 
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

public class SelectApp 
{
	public static void main(String[] args)throws Exception  
	{
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		Statement st=con.createStatement();
		ResultSet rs=st.executeQuery("select * from student");
		while(rs.next())
		{
			System.out.println(rs.getInt(1)+" "+rs.getString(2)+" "+rs.getString(3));
		}
		rs.close();
		st.close();
		con.close();
	}
}

step6:
----
	Run the jdbc application.
	ex:
	Right click to SelectApp.java file --> run as --> Java application.




























